%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 765.354326 283.464565
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.1 (Build 16B2555) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 766 284
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 766 284
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /V put
dup 34 /R put
dup 35 /E put
dup 36 /F put
dup 37 /space put
dup 38 /x put
dup 39 /two put
dup 40 /D put
dup 41 /A put
dup 42 /C put
dup 43 /O put
dup 44 /M put
dup 45 /P put
dup 46 /S put
dup 47 /question put
dup 48 /T put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 18 dict dup begin
/.notdef 0 def
/space 1 def
/two 2 def
/question 3 def
/A 4 def
/C 5 def
/D 6 def
/E 7 def
/F 8 def
/M 9 def
/O 10 def
/P 11 def
/R 12 def
/S 13 def
/T 14 def
/V 15 def
/x 16 def
/uni2B91 17 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BC64A62485D7C863002D39D4194FF17CC8AA420E752C449BD1094F4BB8C06574757F39367BFF08D6528710F607E872A15AE740157C43EA8355EC809B842B0E990C72A2354701935B262A094161EA2B5CA73E941FE1313AA281508C7C6C32FACCCAA6F30FCCC6C9821F13F63BB26D0749491BBADB8B755023A84943562E361B0E7571AD28279B57E87794869D9389915B9A1F03469B335631E1C599B97D1A7130630411DEE76EC37C417C4E63B3273F926FB861D72E4C9364EC3489B5E2556EDAD41DC7818C01A3800CA77CE2428720D70C498E1CFF0F58D899195601670499013C7BCE83527666C2A5F7EAF9DF85AE8A0EF6313EAE31801B561DDAD3FF9AD16E4D4E4F6906AAEDBFD54837766CD8AD0D1B5C2BAF49CA0416C2C8E1A606882D1B0A5CE7EFD2FA81D30D34C6D0D87BCB154A21D083EC5D7C268DB1BF229B6CDA68B94F1D56FDBC2A2AAC0ED3EBE03CDE0CCBA84558B17D920D8201DF6B3236DAE441898B3E9F9162B52F74D40F50FBF3B1E477376CFE0167390D34279EF8F6FC029FF3890CB2D0DF2BECF1D56FBBB3182D77F872022F1C2800ADB00BAB4AA3225665DBD9D8E400B2ECEB64ED413726A9A94E3084983CA448B3A3EE8ED92648E0950AB9E2CB0F79568E9531A78C064F9B8ADDDB0FD7CFA0F018B9D6DC66A82108955019C1102D519563AF20C35E20979CC1A2FF341D629F7E73096C5696ECAF02C583EB0582FA793F6ACBB261C9C56C4E5BADA19A22B0EEAB763E269684326F3AE6
75DCA0EB2F45516BDC0B9F5B868BFD57D844FBC4E1C6BCA9285A79828B73374B3A7692AF9408DF8FAA893C43404E7C213278C02652482E77F66DEC45A0054847EE5CED654F87DC2D363AFBC809E519272C72FC810DEE525BC4115EE468569C61C31C43FF5D2D06FB82EAF2346333CEF68BC2167B09EF2358FED742BDED6CFA06B594BBA268BD95D5FA8D05785EE897B82187F776DCF38CCD1F10A0575494E1A75A1B28835A6BEB1AFBE5A544BA0A0DA40365654D8A4850E2A7F1096DB4949AF4F463AAC37B15CCB1292C58B08065AAB79CA9A7D6F04EA990B5FE73E2D4302D6DF3E63C3846801382043E4FB9A478ED35B40E81F185E2AC4118628B444437B480448215461A95E1E427600462A068926DCD720D7CDEAE65807AA95D3528B9D1C1FA907B5CC9B742C59A1132463053F122A7D9B2ECABBD176170A917F6D3244CB22E0824778A350F2634F36901D444AB75B94D989FD750E18C36C09346123D4D755CB6F53CD66677D1D8A4FD6DC0237518374BF336BB9523CC25FD32CC812561EB1F9C2EBF6A63B1D8D4770D539A887546AB1152B3A837176FD861A00342A23CA5AD601C699549403EB75288155B978724D92A15D333F4107E48B364FB5621DBB11DBE58D3DC05A10C04A0B0C8D3635C2B7EC824F4A5BD253EFC811C691A6D74D339E15A3E8CDA9787F009829186179E45872B87ABB18A661C900ECD683A00FF5017CF9B2CAA1A9558118A01CC51420A7D47AD5ADBE091E8806E5D8F31547FD62C6909B99256DFA06D53411C4E16A59F7ADE4E18A2EC83E20BACB939A3D138FBF9CB6E625405A17C21F5A23543B6587EBFBE43E8590F96EF6BB0EB45BB2FBF9A38005EF4861619FD70B323340DB2FAAED3D1FD6FC4DA94997B931EDA06D0FC1E59F00949E84C202EE6D41B5A0624A043DE8A30450058454F9FCC7543409796083A90B76E910A0A326F6DA1E256CD7EC99E8D39481F437F60D4DF6CB5B7C5D014F28033543052DEEFBAD49C9DCA03B1286E29234136B43F1FC5043B0E3FCE02B86F4EA3699D768718E06E83D3ED86F8FA5A908BD23496390191C77F17FCF997767806475012B0FC93FDE615F8A06463E8A54B78F05299F78A73A288E73D0D5331154207CA0FBBD3281812432EC9D6ED6563EDB6AD5B1E872DE16278CA61C0D9BF0A04962D05AB1AE3D03E5BD0697569BC7FF3F1F6813997EDD8BC155772002D388E1BD958B6C258B1C5CB7A2A01BAAB1639DF3925FC4DBE9996CB7138988C22769F768F9B93C4F287E00AC573778A266AAB5234DD9516E33F7513E8C72DB4EA3A18678E00D355D0B6E6A6511B531A46C47FF1D326C8931180E53B2ED7A8228F59B911DD1812C2B9E52F25B996B6FF63012A94EA0707AFD1C41B334574F448B9BF64CBCACF30F240B8C18552B36480B1DE4BCC9D2C7A15CE53AA71AF4A65100F92DF
E5C882AD5509A73AC873ECB1DA354FD97C2B2D05533942417152CC06E2D0D73496209588A77A27FF995E1D87EC6D773D41EACC44F53F7898947D2F39746872FD1F56126D76D7CF66D0D827FCC9D471A9BC5DC7C78960EC2634FA421756B22BED6F283C08919F65DA9FCE69F3493E96FA01B286CB8BDC4B855457AB85AF65EBFA58A4AA557CD961A03C2F2BE94E1A4CF944966F5CB65B705CA196FA695F637B2E544668401C137A97E31CCF5526F4163E3AEE697DF2EC9527ADA6D64327D20FD1437F81DD2EE547AF5C85F42D603A720FFCDAF67A8E448798F2D1184581769EE898C9B7DAD6C780086B03AD4CCDFBDD97AA1F78918725447D8FF389161A83E13BF5A4277915510C5F22F18A9904C17AA099496CBD7CEBD3C204E49570A43C7871073E387B046EFB4A7E8899AA1BF64DCFDB1282A2A7C55BA8AEC8C054C03191324D77A9587266077DF502006F73BE6B1B1D6130B7AE3E66E7E2C315F69EC4F6B3361BA55D1882F8C2A470DEDA69FB75B1EF382325A09279109FB82D4817B25DFA3C6445728E2F3F1605358FEC356E04E4158AE3A815E8A710578250E82EEC05C1C28345B74F4508D02BE973C280008A71A78AF45632FDBCC7CAE12A750733A7CDEB1DF5ADF19019DFEBAE2B6DC9445C90FCFA26EA69D57219586DEF5AB4F485717D8EEB7899C802EEDD73573019ED74F48B76E93DDAC58FD235DFAEB247614D4CD2E86384D3951830E3B1E4E6EDD0FDE342CD28110FE39734429A14B9C7ADFC162A88E823A6F38B21B6570186055A0A99E0B5D396ABFD7F5765C156CA92894F88DEAE7FB2377300BDDE6D3937FAB86A455839ED1ABCBA14AB443A455619BFD0A4763E21E9032707FBEA8C8D3EF949E733B4A379916962B16FBF77EA9C8DCAB586E4053706269E8F05F04E8894E77AF5172C6C8F9AB9F1BA32EBCAA144D108956CF16D0334C8023DE97864C944756C56A44E6E3F121291608167FE40E95CB0FA32257540E0C3A2904C3C9641DCE8691D363DCFF75939182CC182AD4C4AF27091D16AC16FF0DA2B4E29F29BB8A2CE6ED581DC75EEA001555404F8E617206388A31BD64BA98E7A393E084590FACE6509100A342F224C4461B24B432CA8BBB2863C2CB3CC976B72349EE12BAF6523985A92C9C0E19537BC0E52487549BB1554BC91BECD29C64679A44C0B6EF848E45FA5C48FDE6C547F48D1414CC71AA1D1E9229EB1B72854099C09E55CF84447EF171458686AB38F5BDECD9C28E37BE0704425C6E99F1E3680F4A3441658BE728F02406C7176F87EE5CAE53DD947D4C0E9F7EDF7BCBF525645236952E39BD4BB9C85D89F34412470BE4719E2E64A04BFE704F5BEBE29807ED268A9C455A2AAECFABC8B9E59EE41C9E6D498D3637BD4037C1E8E7EC21AD6ADE577D627FC5CD9B6A059AADD58D4D418025BF89B9AB569B8511EDEE6FB
676CD6091C28DE6CD3CC08B84ECB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F1.1/HelveticaNeue renmfont
%RBIBeginFontSubset: HelveticaNeue-Italic
%!FontType1-1.0: HelveticaNeue-Italic 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue-Italic def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /V put
dup 34 /C put
dup 35 /two put
dup 36 /one put
dup 37 /eight put
dup 38 /R put
dup 39 /X put
dup 40 /S put
dup 41 /O put
dup 42 /F put
dup 43 /T put
dup 44 /A put
dup 45 /E put
dup 46 /D put
dup 47 /I put
dup 48 /N put
dup 49 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -993 1 index div -481 2 index div 1511 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 19 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/eight 4 def
/A 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/I 10 def
/N 11 def
/O 12 def
/R 13 def
/S 14 def
/T 15 def
/V 16 def
/X 17 def
/u20BC 18 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-993 -481 1511 1077}def
/UniqueID 4265036 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91BD326F6E6A1837BE2706B92FCAA32341FE90C82594E2DAAEF640CEE11357769C8B8208A441E3D8C79F525ECEEA5365E599A0E0C69766080A85D29ADDBE6306766E46CD12249B797A5120C54E8EDF8AF818BF050A3D931486C60784FDCABB216EB0D5957187110801576C448398B1F32867CB8E523B0C65575CD580D8FB6FEEC426C3B3E6999FB38C84D62C630E6AEFDB1342C10F2770E3C5606E3F7828224E14548775626B62240EC68492B9A0DD560D80E2D2B4ABAED5B84C9EE17905DC1609F0C41164F2AEDA303E3BB0DC6A6C7B2B610E42DDD4E50EEF6AF7C507C3D73C4CD8287B273EB629D141631E127A3FF024FBC311C6C46CE51CD0D6EAA50E072F373E0E4A43843B627E5ED93332DBF21789FED39BD4891EF1E25529020F6BC119BEE08245BF13A7E0CF0BE30B85C44A4EFB2905A6B22A06F9DFA8F890E8CB5574C6E14BDF75DADC1D989003CBDD715A31DF4313E4BCC13C24AF289D7C49CA0A54E5594862E27B30960BAD4109B1F61CDF4F756B3BC2EAF74558685B691D2D1670A2AC09FDF92FC496E9459711995DE316FF207D1CD48AD42472B627B7B49ED896CE209F9E571B9ECB474E74B40A5093F9A54D4048BAFBC16A84B660C829840BB75520EEFC7C0CAAE8C272C1A4E3E1FCA586B7008603F2B67FCFB268FA2005B707B9F34BCDFCB94210610DD2B2ED75E31CC5ABFEDFD028C2D741111F9F982CFF14EC0BE488B69C44DBB8C3BC092641A3CF58B1C6F35AC9A309CE7D10581895E26615
0179DC4602CFD4AFCF7353A689BEF0D8FAEE2915673034961DFAA4C7A7331ACD52A0AF8811671F3F8F3B174937BA7CF293B01FB4F1640B84418DB6F41D66C6A3DD9B7285E18B68B3EB6922DD2CAF71BBFBCB87E0EA4342FD50158A7582CA6AA722E6573B93BCC1C74AC88ECAE8BF75F42B3933096DAA04BF20D9FDECFC1C85688D678BD2EB9524488AE907408F526CCF234E89E8FA192CA8F24AF69D61BC02F4C47A48E085E0690F053E3A02AA4F1A3FD225D3F6DF0CAAC49AC758224F22FBDB0F42C5B6E0A8129A5EB82199D53D484036D5BDFC840B6F970A451474010F4C1FD5ADDE9FAF071609AE66DB3E6774842E03643402B1D3323607B1F0C097B61F93EF42FE86B86D8EA29B2366C5CE1ED978785FEE30CC153AF772DE76FF6CC911181716F5E7BAD1DB583B10B0DCDBB6BF91C4DCA1CF7CF1B225EB73A37DC57E602430FE3E7C7EF0AB7C8F8A1360F4C1D3FE2D0D2CBA4DCB665B1EBD4A5B2A83AD1A86542889198220FF8E17981F46AFDB1B08F98D9803090101608045258BB1C6DDDDB769D87D8072D4EB597B372A81091ACF9537DD7092545A0B2AD42F4742D026F3CEF70502D6B6D3FB1006A7750767FB61460A4AFEBE83E0BFC96C450A15C2367F91C4C05E9708D54A198BE335E363FF6FFAB4F0FFA511D68822FAFD7F4455BE0EF5AE04E329C365BD378A77C9ED59814A66B99144B83EA9B4304362E52B92995A6189A7237A1D06C3841531F16341FC8974632AFEA131D777D3290370A73E2FA9A98296A44EA3669AF5936FB60BD2A6435BE5185999D5EAB5ABA013769A5C3F457422F8612D1956FE4C3313903EAB0E9E7D91DC576BF5BDF7FA201FF50BF7683231067319D95081EF28047B7426ADC7037F11EA0D28BA79B29FD1268B9DA3695D9D4C2EB5A71C2100236D63C61AEA14C825DFACA8F4E45994D2A50ADCC4B508043E7A5B5B9A8127A28223C715279A0E484C668D38D0147E6C1C67B1CD328BC70E4BE9101987702A321E8411388D17B8702F220DDE27B49F581FF03EC9EC21BFCA36699143C3BB54CB506B53BE631F23346A4925A767961699624B359DB1F07E24671DA202EB7FE9FB097CE9B70B0B8C5A57393F0E96778EA1A383122E9DBBC1132A4BF4DF8C8FE0185773DCFA6504CD0A50FBF52BEDFFEFA982CFD53664D414DA0B05172F3C7AAE4CA32E0841B59344579D17E22C0A15696D820FFCD3B05E151909E6B1FF66E99D3EF403863773519309BA756D50E9DF1ECB1F445AD3342D5E6975A17686DE32464728D408232FCDFDB66F8A1CEEBD0C44A2A6A39B42F66174826B1F3C351D8CFF56BBB63871E37AD0E4B90ED53E75B2B293DF53F5E681B24A9F1D50316E88ED6E380FFBC00BEE7E79445CC86A18C791BD5BF08116DF34E3F19538104A544E4CF63A587E319FF4F0F74A1C85F100B39E661ECDA78F9F0CCB0F
23EFB112769226577FF328918D1DC1FC72269018F0A2B6F3C94F44ADF55EB468C6F1963754787E287117C94A042C6B663678D02EFA08B88F29FA58FBCF255272330CE6B0996A790C01F3BE7D6CFC07B0648171A60196F9E373F6D1A7799BCF95B6DDAA5E00F36D0C0B1F01F8B5DD668D7817F9BB28F89789720F722679DFB15B31A81453070A269D47DBCEDB97EC524585584D2B2C669BF454BE8C737EF0A5CEE8728F0D5EA917E074587DFA2D6B2176C30C204DF2B7AD248EE6D88F8545B738174F3006D1BDDB1C2FECAAD29C75E70EB078D6F160558137278CE7C9375BD16E3EF47A94694A168BF021942CF6955CD176CAE700025CBBD4A6900982650C06995D4A4131905F8DA4FE934712D1A99CFBDF6BA50141AD1454B4E1B553931E561DB937AFAC0D5734AD6A32517A3C7F63821CA4711716D9C2E090B0E3B4144BEDFDAF0C6BAC1E7F52CFC26111087433665CA7D14163F6031A2D4B51FFB8F0D9EEF70276C868CBFA4EF4859E6F708C23D351E06714DD0AAE5B92BDF957D91E6F8D2D604F768FB30921AFEC2EE0054068FD21EAD74122A8BB39CCE5165A42DD5FC5460AF215A29B31483C36E47FF614BA614907C0F143398F5F1A50B0D2749E93DA94E9EC2066C65E4F55863CFA911673D2D94626AF48DC32F186D2EFA381A051848BAB55FCDDC019857AD81DED7447D5E6ED6FCAA270AD9D7124EC9856F9E4282AACC896D5A28F530D1F82EF31FFFF8FBF8513714F4E05F64829600E11D02F7A420F3796FC5B24B540F2491CA8A5E9B4EBE1E7E50D4CDB36CD50A8625B5F58518B2AC2059BE0D619DF81A12255016E79364812B4B29BE0244928760BC18A664227F328F10B85162C2D440755B23557D5217265DFDA4F102FA96EE656536F1E5134BC15DB61C7461DC821AFA2AF8A8540D855E950B1C9129499AC6AE304F8DB3E5EAF17F712C1D59BE19C556840780D5D878E9C13CF2B4F6AE5F5D52EBE20996767BAC340431C4F7BC87B0799988FA82DE5B856CDAEF2BABE782391A2531A220144C75B52A53C4503CF8612104B6D626B554223C655D5875F6C5E20FC7BB42B48311C101FD0B27529167179096E8064DF0150B9315F7981B146E1CAE24E0CEA0243E6C3C8835BFB4619FD8E4BA9D53E0B45BF01A48EEB8E263280EB909C07B08049F66F62788E191717193F3C14DBDE4E2C04E68D67B06A1C0B9E145034FE4F67444B7BCFF1890AF9AC8DA16DA97EEF268AC9A18B86D330DD62161F084F18222F66CCEC384422C89E954540014AC3B7F91188896EA5BD55D216B29DA270D7BEFD30788271A56226313BC40FD7CAF79C84CA13AD5BE84D22CA10D59FB339AF75E65EBA6E55D40A7678A19FF997A6DA504E95C2CF0037EAC2073A5EC1E731F3A7A79300255E8A16E267B5499ED8221F7F7E0667057A68A1F02A81546F5B8439B8FDC007
DD729018766F981BAD48BBA4F74C4DDBA67233ED90328F02D2947F7A940F5A1EA339A28630BB5DDBA1AF38DD3C39ACB3C2E2EEFCE39B0D97647B69655859513F122AB8499C6AB3DDE2F559801EC8A20125BE35F89D4029AD99D7A6D1F221D2AFD5DA8C20DDF085BAF7107F9BC837686D3230A0C2841F76EF3B44D591FEE10ED1E764DBB8E42F0A9ACB69502A75A01177223540418B09A2E0D3B9D263ADE19098F8D1859BB095C8225583ED59DFABAA832D6B78CE7F98C49E89AE80B0B49F7970A1DD31681F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue-Italic cguidfix
/F2.1/HelveticaNeue-Italic renmfont
%RBIBeginFontSubset: LucidaGrande
%!FontType1-1.0: LucidaGrande 1.0000.6.0040
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /LucidaGrande def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /arrowup put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2186 1 index div -1509 2 index div 3361 3 index div 2381 5 -1 roll div]cvx def
/sfnts [<



2121591B212121592D2CB00243583DCD181BCD592D2C462346608A8A462320468A608A61B8FF8062232010238AB10C0C8A70456020B0005058B00161B8FFBA8B1BB0468C59B0106068013A2D2C2045B0032546524BB013515B58B0022546206861B00325B003253F2321381B2111592D2C2045B00325465058B0022546206861B00325B003253F2321381B2111592D2C004BB0C8515800B00743B006430B592D2C8A10EC2D2CB00C4358211B2046B0005258B8FFF0381BB0103859592D2C20B0005558B8100063B003254564B00325456461B0005358B0021BB04061B00359254569535845441B2121591B21B0022545B00225456164B028515845441B212159592D2C21210C6423648BB84000622D2C21B08051580C6423648BB82000621BB200402F2B59B002602D2C21B0C051580C6423648BB81555621BB200802F2B59B002602D2C0C6423648BB84000626023212D2C184B5358B00425B00425496423456469B0408B6120B080626AB00225B00225618CB00C2344218A10B00CF6211B218A11231220392F592D2CB00225B002254964B0C05458B8FFF838B008381B2121592D2CB0134358031B02592D2CB0134358021B03592D2CB00A2B2310203CB0172B2D2CB00225B8FFF038B0282B8A102320D023B0102BB0054358C01B3C59201011B00012012D2C4B53234B515A58381B2121592D2C01B0022510D023C901B00113B0001410B0013CB001162D2C01B00013B001B0032549B0031738B001132D2C4B53234B515A5820458A60441B2121592D2C184B5358B00425B004254964B00325B00325496468B0408B6120B080626AB00225B00225618CB00C234421B004251023B00CF61BB00425B0042511122320392F59CC21212D2C0118B0184358B0052546234564611B21B00425B004254A59B00E23442310B00EEC2310B00EEC2D2CB01B435820B0016045B000515820B0016020452068B0005558B0206044211B212121591B20B0016020452068B0005558B8FFE06044B01C4B50582045B02060441B21591B21212159591B21592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2C4B52587D1B7A592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B00326





00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/arrowup 1 def
/ukcyrillic.alt 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2186 -1509 3361 2381}def
/UniqueID 4115029 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0D64BB9C7DEBEE741835B35535F17D79D892FED89665390F8B55EBC37E55B8535F0BF30C9317D8613D70380D7FE7B97857A92700E4B679B20F13416C920B07199F3DC16C509BC23545EDDABE78DCEBB9507B0993F5DE8BE648BB137B9AFE60450CDED861F52A55C92A892B4EB3F04265E5F7E226A2262911D339D29D37692B5F08D4B35A839AAE2DB25703321398E59151447C6DCA70A7E3DFC7BC01F6BB021B41840F1CC070AB80D7BBFED392243977CBCF330D008B6FFDF9151F6DD8418C10D38236165302108A10B479ED725380F2CB52972EB80691DD9D2374758C395813D246076081C6E71C9A76192F8483309013857A0EE4D7852EA1D4140BEFE5A350783F9A03BF9698F5F1B2EDD47C61A1BFB5BBF638DFB395AA548A7A56D34F2CEDB0103BF01B0B146687B60241D2F2625EBDC778DF2BA1D7C7FB7298E3397620E45DCE9D2FD676ED2D8096FA1EA7DDB9107B10151583FC6CED8ED82B76E1042D86EB9FD03079E20318E7FE0F4D059DEDFC2F3D60CBA822564D1533D6BA0615BFAEC61E357730BC1CF1CD1888AE07DF3BC7D0B843AA05C7151234EB60614FCCAC1D8EDE313091ED821698245608AEB1AB7A430A0EA62D02C1E763D5353FC858CABA36E3F0B9763C895D4E8C1AFA3DAE6515E4A972DC9F580A0DBA621999C63CB03BC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/LucidaGrande cguidfix
/F3.1/LucidaGrande renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 765.35431 283.46457 rc
119.05511 235.27559 m
195.59055 235.27559 l
195.59055 198.4252 l
119.05511 198.4252 l
h
119.05511 235.27559 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 283.46457 cm
119.05511 48.188976 m
195.59055 48.188976 l
195.59055 85.039368 l
119.05511 85.039368 l
h
119.05511 48.188976 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 157.32283 216.85039 cm
/F1.1[ 16 0 0 -16 0 0]sf
-30.664 5.776001 m
(!"#$%&')[ 9.776000 10.960000 9.776000 9.184000 4.448000 8.288000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
48.188976 66.614174 m
109.15512 66.614174 l
S
0 i
CM
117.15512 216.85039 m
109.15512 219.85039 l
109.15512 213.85039 l
h
117.15512 216.85039 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
117.15512 66.614174 m
109.15512 63.614174 l
109.15512 69.614174 l
h
117.15512 66.614174 m
S
/Cs2 SC
0 sc
1 0 0 -1 61.420769 225.11023 cm
/F2.1[ 13 0 0 -13 0 0]sf
-13.3575 4.3180008 m
(!"")[ 7.943000 9.386000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
266.4567 235.27559 m
342.99213 235.27559 l
342.99213 198.4252 l
266.4567 198.4252 l
h
266.4567 235.27559 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 283.46457 cm
266.4567 48.188976 m
342.99213 48.188976 l
342.99213 85.039368 l
266.4567 85.039368 l
h
266.4567 48.188976 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 304.7244 216.85039 cm
/F1.1[ 16 0 0 -16 0 0]sf
-16.591999 5.776001 m
(\(\)*)[ 11.264000 10.368000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
195.59055 66.614174 m
256.5567 66.614174 l
S
0 i
CM
264.5567 216.85039 m
256.5567 219.85039 l
256.5567 213.85039 l
h
264.5567 216.85039 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
264.5567 66.614174 m
256.5567 63.614174 l
256.5567 69.614174 l
h
264.5567 66.614174 m
S
/Cs2 SC
0 sc
1 0 0 -1 208.59055 225.11023 cm
/F2.1[ 13 0 0 -13 0 0]sf
-7.5854998 4.3180008 m
(#!)[ 7.228000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
391.18109 238.11023 m
481.88977 192.75591 l
391.18109 147.40158 l
h
391.18109 238.11023 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 283.46457 cm
391.18109 45.354332 m
481.88977 90.708664 l
391.18109 136.06299 l
h
391.18109 45.354332 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 436.53543 192.75591 cm
/F1.1[ 16 0 0 -16 0 0]sf
-29.677292 5.776001 m
(*+,-)[ 11.552000 12.160000 13.936000 0.000000 ] xS
1 0 0 -1 364.49606 230.77953 cm
/F2.1[ 13 0 0 -13 0 0]sf
-11.1995 4.3180008 m
($!%)[ 7.228000 7.943000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
48.188976 124.72441 m
381.2811 124.72441 l
S
0 i
CM
389.2811 158.74016 m
381.2811 161.74016 l
381.2811 155.74016 l
h
389.2811 158.74016 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
389.2811 124.72441 m
381.2811 121.72441 l
381.2811 127.72441 l
h
389.2811 124.72441 m
S
1 J
1 j
0.60000002 i
342.99213 66.614174 m
381.2811 66.614174 l
S
0 i
CM
389.2811 216.85039 m
381.2811 219.85039 l
381.2811 213.85039 l
h
389.2811 216.85039 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
389.2811 66.614174 m
381.2811 63.614174 l
381.2811 69.614174 l
h
389.2811 66.614174 m
S
/Cs2 SC
0 sc
1 0 0 -1 60.200787 168.90552 cm
-8.4239998 4.3180008 m
(&')[ 8.905000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
678.89764 119.05511 m
725.66931 96.377953 l
678.89764 73.70079 l
632.12598 96.377953 l
h
678.89764 119.05511 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 0 283.46457 cm
678.89764 164.40945 m
725.66931 187.08661 l
678.89764 209.76378 l
632.12598 187.08661 l
h
678.89764 164.40945 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 678.89764 96.377953 cm
/F1.1[ 16 0 0 -16 0 0]sf
-19.368567 5.3224578 m
(.+$/)[ 10.368000 12.160000 9.184000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
481.87729 90.714897 m
677.56165 90.741798 l
678.89764 90.741798 l
678.89764 154.50945 l
S
0 i
CM
678.89764 120.95512 m
681.89764 128.95512 l
675.89764 128.95512 l
h
678.89764 120.95512 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
678.89764 162.50945 m
681.89764 154.50945 l
675.89764 154.50945 l
h
678.89764 162.50945 m
S
1 J
1 j
0.60000002 i
501.73227 85.039368 m
510.23621 85.039368 l
510.23621 62.362206 l
515.90552 62.362206 l
515.90552 85.039368 l
532.91339 85.039368 l
532.91339 62.362206 l
538.5827 62.362206 l
538.5827 85.039368 l
541.4173 85.039368 l
541.4173 62.362206 l
547.08661 62.362206 l
547.08661 85.039368 l
575.43304 85.039368 l
575.43304 62.362206 l
581.10236 62.362206 l
581.10236 85.039368 l
609.44879 85.039368 l
609.44879 62.362206 l
615.1181 62.362206 l
615.1181 85.039368 l
643.46454 85.039368 l
643.46454 62.362206 l
649.13385 62.362206 l
649.13385 85.039368 l
654.80316 85.039368 l
654.80316 62.362206 l
660.47241 62.362206 l
660.47241 85.039368 l
671.81104 85.039368 l
671.81104 62.362206 l
677.48029 62.362206 l
677.48029 85.039368 l
683.1496 85.039368 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 526.57086 236.44882 cm
/F2.1[ 13 0 0 -13 0 0]sf
-12.8765 4.3180008 m
(\(\)*)[ 8.424000 9.867000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
490.39371 113.38583 m
566.92914 113.38583 l
566.92914 22.677166 l
490.39371 22.677166 l
h
490.39371 113.38583 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 0 283.46457 cm
490.39371 170.07874 m
566.92914 170.07874 l
566.92914 260.78741 l
490.39371 260.78741 l
h
490.39371 170.07874 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 528.66144 68.031494 cm
/F1.1[ 16 0 0 -16 0 0]sf
-21.488001 5.776001 m
(0,"')[ 9.184000 13.936000 10.960000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
632.12598 187.08661 m
576.8291 187.08661 l
S
0 i
CM
568.8291 96.377953 m
576.8291 93.377953 l
576.8291 99.377953 l
h
568.8291 96.377953 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
568.8291 187.08661 m
576.8291 190.08661 l
576.8291 184.08661 l
h
568.8291 187.08661 m
S
/Cs2 SC
0 sc
1 0 0 -1 600.38745 53.858269 cm
/F2.1[ 13 0 0 -13 0 0]sf
-19.747 4.3180008 m
(\(+,&+)[ 8.424000 6.266000 8.671000 8.671000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0.69411802 0 0.109804 sc
1 0 0 -1 0 283.46457 cm
510.23621 53.858269 m
510.23621 69.448822 l
510.23621 85.039368 l
S
538.5827 53.858269 m
538.5827 69.448822 l
538.5827 85.039368 l
S
566.92914 53.858269 m
566.92914 69.448822 l
566.92914 85.039368 l
S
595.27557 53.858269 m
595.27557 69.448822 l
595.27557 85.039368 l
S
623.62207 53.858269 m
623.62207 69.448822 l
623.62207 85.039368 l
S
651.96851 53.858269 m
651.96851 69.448822 l
651.96851 85.039368 l
S
680.31494 53.858269 m
680.31494 69.448822 l
680.31494 85.039368 l
S
0 0 0 sc
572.8291 56.692913 m
589.37561 56.692913 l
S
0 i
CM
593.37561 226.77165 m
589.37561 228.27165 l
589.37561 225.27165 l
h
593.37561 226.77165 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
593.37561 56.692913 m
589.37561 55.192913 l
589.37561 58.192913 l
h
593.37561 56.692913 m
S
CM
568.8291 226.77165 m
572.8291 225.27165 l
572.8291 228.27165 l
h
568.8291 226.77165 m
f
1 0 0 -1 0 283.46457 cm
568.8291 56.692913 m
572.8291 58.192913 l
572.8291 55.192913 l
h
568.8291 56.692913 m
S
/Cs2 SC
0 sc
1 0 0 -1 581.49768 235.27559 cm
-7.3449998 4.3180008 m
(+#)[ 7.462000 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
678.89764 209.76378 m
678.89764 238.11023 l
576.8291 238.11023 l
S
0 i
CM
568.8291 45.354332 m
576.8291 42.354332 l
576.8291 48.354332 l
h
568.8291 45.354332 m
f
0 J
0 j
1 0 0 -1 0 283.46457 cm
568.8291 238.11023 m
576.8291 241.11023 l
576.8291 235.11023 l
h
568.8291 238.11023 m
S
/Cs2 SC
0 sc
1 0 0 -1 599.52753 106.05511 cm
-17.335501 4.3180008 m
(&-,.)[ 8.905000 7.943000 8.671000 0.000000 ] xS
1 0 0 -1 704.16931 160.90158 cm
-16.107126 4.8180008 m
(/0+1)[ 3.367000 9.386000 7.462000 0.000000 ] xS
/F3.1[ 13 0 0 -13 0 0]sf
7.7218733 4.8180008 m
(!)s
1 0 0 -1 670.39368 64.883797 cm
/F2.1[ 13 0 0 -13 0 0]sf
-3.7309999 4.3180008 m
(+)s
1 0 0 -1 626.45245 86.70079 cm
-3.7309999 4.3180008 m
(*)s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 0 283.46457 cm
121.88976 99.301086 m
121.88976 99.301086 126.97099 99.301086 126.2451 99.301086 c
125.51921 99.301086 126.2451 97.849304 126.2451 97.849304 c
126.2451 97.849304 126.97099 99.301086 128.42278 99.301086 c
129.87454 99.301086 131.32632 97.849304 131.32632 97.849304 c
131.32632 97.849304 131.32632 100.75286 132.77811 100.75286 c
134.22989 100.75286 134.22989 98.575195 134.95578 98.575195 c
135.68167 98.575195 138.58522 117.44832 138.58522 117.44832 c
138.58522 117.44832 138.58522 120.35188 140.037 117.44832 c
141.48878 114.54476 140.76289 103.65642 142.94057 100.75286 c
145.11823 97.849304 153.10301 99.301086 152.37712 99.301086 c
151.65123 99.301086 156.73247 99.301086 156.73247 99.301086 c
156.73247 99.301086 156.73247 121.80366 156.73247 121.07777 c
156.73247 120.35188 160.36191 121.07777 160.36191 121.07777 c
160.36191 121.07777 159.63602 108.73765 162.53958 103.65642 c
165.44313 98.575195 166.89491 97.123413 166.89491 97.849304 c
166.89491 98.575195 165.44313 110.91531 169.79848 117.44832 c
174.15381 123.98133 174.15381 114.54476 174.15381 114.54476 c
174.15381 114.54476 174.15381 99.301086 174.15381 99.301086 c
174.15381 99.301086 178.50916 97.123413 178.50916 97.849304 c
178.50916 98.575195 178.67459 124.58195 178.50916 124.72441 c
S
116.22047 110.55118 m
192.75591 110.55118 l
S
ep
end
%%Trailer
%%EOF
